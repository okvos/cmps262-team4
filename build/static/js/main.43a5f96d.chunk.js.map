{"version":3,"sources":["components/user/CreateView.js","components/Util.js","components/feed/Post.js","components/feed/CreatePost.js","components/feed/FeedView.js","components/user/LoginView.js","components/profile/DirectoryView.js","components/profile/ProfileView.js","components/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["CreateView","useState","userIsAvailable","setUserIsAvailable","username","setUsername","accountCreated","setAccountCreated","currentStep","setCurrentStep","useEffect","_","isAvail","Math","random","className","xmlns","viewBox","cx","cy","r","fill","d","onChange","e","target","value","type","placeholder","onClick","__TITLE__","FAKE_FIRST_NAMES","FAKE_LAST_NAMES","util","this","firstName","floor","length","lastName","Post","post","src","author","name","to","fromNow","withTitle","date","text","isLoggedIn","CreatePost","setText","rows","posts","window","localStorage","getItem","JSON","parse","push","Date","getTime","slice","max","setItem","stringify","location","reload","FeedView","limit","setPosts","mockPosts","i","mockName","findName","toLowerCase","split","join","wordCount","lorem","words","getMinutes","setHours","getHours","setMinutes","id","myPosts","sort","a","b","map","key","LoginView","document","DirectoryView","users","setUsers","randomUsers","count","user","k","ProfileView","style","borderRadius","Navigation","role","aria-label","href","width","height","aria-expanded","data-target","aria-hidden","path","ViewManager","view","params","useParams","View","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.43a5f96d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./CreateView.css\";\n\nexport default function CreateView() {\n  let [userIsAvailable, setUserIsAvailable] = useState(null);\n  let [username, setUsername] = useState(\"\");\n\n  // bool if account has been created or not to show success\n  let [accountCreated, setAccountCreated] = useState(false);\n\n  // current creation step\n  let [currentStep, setCurrentStep] = useState(1);\n\n  // check if username is available as user types it\n  useEffect(\n    (_) => {\n      if (username === \"\") setUserIsAvailable(null);\n      else {\n        let isAvail = Math.random() < 0.5; // random instead of server-side callback\n        setUserIsAvailable(isAvail);\n      }\n    },\n    [username]\n  );\n  return (\n    <>\n      {accountCreated === true && (\n        <>\n          <div className=\"success-animation\">\n            <svg\n              className=\"checkmark\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 52 52\"\n            >\n              <circle\n                className=\"checkmark__circle\"\n                cx=\"26\"\n                cy=\"26\"\n                r=\"25\"\n                fill=\"none\"\n              />\n              <path\n                className=\"checkmark__check\"\n                fill=\"none\"\n                d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"\n              />\n            </svg>\n          </div>\n          <h1 className=\"title has-text-centered\">Success</h1>\n          <h1 className=\"subittle has-text-centered\">\n            Your account has been created\n          </h1>\n        </>\n      )}\n      {accountCreated === false && (\n        <div>\n          <div className={`box step${currentStep !== 1 ? \" locked\" : \"\"}`}>\n            <h1 className=\"title is-5\">\n              Step 1 &mdash; <span>Create a username</span>\n            </h1>\n            <div className=\"field\">\n              <label className=\"label\">Username</label>\n              <div className=\"control has-icons-left has-icons-right\">\n                <input\n                  onChange={(e) => setUsername(e.target.value)}\n                  className={`input ${\n                    userIsAvailable === true\n                      ? \"is-success\"\n                      : userIsAvailable === false\n                      ? \"is-danger\"\n                      : \"\"\n                  }`}\n                  type=\"text\"\n                  placeholder=\"Username\"\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-user\" />\n                </span>\n                {userIsAvailable !== null && userIsAvailable === true && (\n                  <span className=\"icon is-small is-right\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n                {userIsAvailable !== null && userIsAvailable === false && (\n                  <span className=\"icon is-small is-right\">\n                    <i className=\"fas fa-exclamation-triangle\" />\n                  </span>\n                )}\n              </div>\n              {userIsAvailable !== null && userIsAvailable === true && (\n                <p className=\"help is-success\">This username is available</p>\n              )}\n              {userIsAvailable !== null && userIsAvailable === false && (\n                <p className=\"help is-danger\">This username is not available</p>\n              )}\n            </div>\n\n            {currentStep === 1 && (\n              <div className=\"field is-grouped is-grouped-right\">\n                <div className=\"control\">\n                  <button\n                    className=\"button is-success\"\n                    onClick={(e) => setCurrentStep(2)}\n                  >\n                    Next\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Step 2 */}\n          <div className={`box step${currentStep !== 2 ? \" locked\" : \"\"}`}>\n            <h1 className=\"title is-5\">\n              Step 2 &mdash; <span>Enter your email address</span>\n            </h1>\n            <div className=\"field\">\n              {\" \"}\n              <div className=\"control has-icons-left has-icons-right\">\n                <input\n                  className=\"input\"\n                  type=\"email\"\n                  placeholder=\"Email Address\"\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\" />\n                </span>\n                <span className=\"icon is-small is-right\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </div>{\" \"}\n            </div>\n\n            {currentStep === 2 && (\n              <div className=\"field is-grouped is-grouped-right\">\n                <div className=\"control\">\n                  <button\n                    className=\"button is-link\"\n                    onClick={(e) => setCurrentStep(1)}\n                  >\n                    Previous\n                  </button>\n                </div>\n                <div className=\"control\">\n                  <button\n                    className=\"button is-success\"\n                    onClick={(e) => setCurrentStep(3)}\n                  >\n                    Next\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* Step 3 */}\n          <div className={`box step${currentStep !== 3 ? \" locked\" : \"\"}`}>\n            <h1 className=\"title is-5\">\n              Step 3 &mdash; <span>Create a password</span>\n            </h1>\n            <div className=\"field\">\n              <div className=\"control has-icons-left has-icons-right\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\" />\n                </span>\n              </div>\n            </div>\n            <div className=\"field\">\n              <div className=\"control has-icons-left has-icons-right\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\" />\n                </span>\n              </div>\n            </div>\n\n            {currentStep === 3 && (\n              <div className=\"field is-grouped is-grouped-right\">\n                <div className=\"control\">\n                  <button\n                    className=\"button is-link\"\n                    onClick={(e) => setCurrentStep(2)}\n                  >\n                    Previous\n                  </button>\n                </div>\n                <div className=\"control\">\n                  <button\n                    className=\"button is-success\"\n                    onClick={(e) => setAccountCreated(true)}\n                  >\n                    Create Account\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\nCreateView.__TITLE__ = \"Create Account\";\n","const FAKE_FIRST_NAMES = [\"John\", \"Joe\", \"Mary\", \"Sally\", \"Tom\"];\n\nconst FAKE_LAST_NAMES = [\"Smith\", \"Doe\", \"Joseph\", \"Brown\", \"Thompson\"];\n\nclass Util {\n  constructor() {\n    this.username = null;\n  }\n\n  generateFakeName() {\n    let firstName =\n      FAKE_FIRST_NAMES[Math.floor(Math.random() * FAKE_FIRST_NAMES.length)];\n    let lastName =\n      FAKE_LAST_NAMES[Math.floor(Math.random() * FAKE_LAST_NAMES.length)];\n    return `${firstName} ${lastName}`;\n  }\n\n  isLoggedIn() {\n    return this.username !== null;\n  }\n}\n\nexport const util = new Util();\nexport const MOCK_POST_COUNT = 17;\n","import React from \"react\";\nimport Moment from \"react-moment\";\nimport { util } from \"../Util\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Post({ post }) {\n  return (\n    <article className=\"media\">\n      <figure className=\"media-left\">\n        <p className=\"image is-64x64\">\n          <img src=\"https://via.placeholder.com/128x128\" />\n        </p>\n      </figure>\n      <div className=\"media-content\">\n        <div className=\"content\">\n          <p>\n            <strong>{post.author.name}</strong>{\" \"}\n            <Link to={`/profiles/${post.author.username}`}>\n              <small>@{post.author.username}</small>\n            </Link>{\" \"}\n            &mdash;{\" \"}\n            <small>\n              <Moment fromNow withTitle>\n                {post.date}\n              </Moment>\n            </small>\n            <br />\n            {post.text}\n          </p>\n        </div>\n        {util.isLoggedIn() === true && (\n          <nav className=\"level is-mobile\">\n            <div className=\"level-left\">\n              <a className=\"level-item\">\n                <span className=\"icon is-small\">\n                  <i className=\"fa fa-reply\"></i>\n                </span>\n              </a>\n              <a className=\"level-item\">\n                <span className=\"icon is-small\">\n                  <i className=\"fa fa-retweet\"></i>\n                </span>\n              </a>\n              <a className=\"level-item\">\n                <span className=\"icon is-small\">\n                  <i className=\"fa fa-heart\"></i>\n                </span>\n              </a>\n            </div>\n          </nav>\n        )}\n      </div>\n    </article>\n  );\n}\n","import React, { useState } from \"react\";\n\nexport default function CreatePost() {\n  let [text, setText] = useState(\"\");\n  let create = (_) => {\n    // load my local posts, parse them\n    let posts = window.localStorage.getItem(\"posts\");\n    if (!posts) {\n      posts = [];\n    } else posts = JSON.parse(posts);\n\n    // add this post to the posts and then re-save local storage\n    posts.push({\n      date: new Date().getTime(),\n      text: text,\n    });\n\n    if (posts.length > 10) {\n      posts = posts.slice(Math.max(posts.length - 10, 0));\n    }\n\n    window.localStorage.setItem(\"posts\", JSON.stringify(posts));\n    window.location.reload(); // refresh to reload local storage\n  };\n  return (\n    <div>\n      <div className=\"field\">\n        <label className=\"label\">Create new post</label>\n        <div className=\"control\">\n          <textarea\n            className=\"textarea\"\n            rows={2}\n            placeholder=\"What's on your mind?\"\n            onChange={(e) => setText(e.target.value)}\n          />\n        </div>\n      </div>\n      <div className=\"field is-grouped is-grouped-right\">\n        <div className=\"control\">\n          <button className=\"button is-link\" onClick={create}>\n            Share\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { MOCK_POST_COUNT, util } from \"../Util\";\nimport { name, lorem } from \"faker\";\nimport Post from \"./Post\";\nimport CreatePost from \"./CreatePost\";\n\nexport default function FeedView({ limit }) {\n  const [posts, setPosts] = useState(null);\n  useEffect((_) => {\n    // normally request posts from server\n    // create fake posts for now as there is no server/db\n    // fetchPosts = async _ => { }; await fetchPosts();\n\n    let mockPosts = [];\n    for (let i = 0; i <= (limit || MOCK_POST_COUNT); i++) {\n      //let name = util.generateFakeName();\n      let mockName = name.findName();\n      let username = mockName.toLowerCase().split(\" \").join(\"-\");\n\n      let wordCount = Math.floor(Math.random() * 50) + 5;\n      let text = lorem.words(wordCount);\n      let date = new Date();\n      if (i >= date.getMinutes()) date.setHours(date.getHours() - 1);\n      date.setMinutes(i);\n\n      mockPosts.push({\n        id: wordCount,\n        author: {\n          name: mockName,\n          username: username,\n        },\n        text: text,\n        date: date,\n      });\n    }\n\n    // add my posts if i'm logged in\n    if (util.isLoggedIn()) {\n      let myPosts = window.localStorage.getItem(\"posts\");\n      if (myPosts) {\n        myPosts = JSON.parse(myPosts);\n        for (let post of myPosts) {\n          mockPosts.push({\n            id: Math.floor(Math.random() * 50) + 5,\n            author: {\n              name: util.username,\n              username: util.username,\n            },\n            text: post.text,\n            date: new Date(post.date),\n          });\n        }\n      }\n    }\n\n    mockPosts.sort((a, b) => b.date - a.date);\n    setPosts(mockPosts);\n  }, []);\n  return (\n    <>\n      {util.isLoggedIn() === true && (\n        <>\n          <CreatePost />\n          <hr />\n        </>\n      )}\n      {posts &&\n        posts.map((post, key) => {\n          return <Post post={post} key={key} />;\n        })}\n    </>\n  );\n}\nFeedView.__TITLE__ = \"Feed\";\n","import React, { useState } from \"react\";\n\nexport default function LoginView() {\n  // only store username for demo purposes\n  let [username, setUsername] = useState(\"\");\n\n  // login function to set user\n  let login = (_) => {\n    if (username === \"\") {\n      return false;\n    }\n    // set username to signify we're logged in\n    window.localStorage.setItem(\"username\", username);\n    // force redirect rather than React.Link so the web app can reload user info\n    document.location = \"/\";\n  };\n  return (\n    <>\n      <div className=\"field\">\n        <p className=\"control has-icons-left has-icons-right\">\n          <input\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Username\"\n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n        </p>\n      </div>\n      <div className=\"field\">\n        <p className=\"control has-icons-left\">\n          <input className=\"input\" type=\"password\" placeholder=\"Password\" />\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-lock\" />\n          </span>\n        </p>\n      </div>\n      <div className=\"field\">\n        <p className=\"control\">\n          <button className=\"button is-success\" onClick={login}>\n            Login\n          </button>\n        </p>\n      </div>\n    </>\n  );\n}\n\nLoginView.__TITLE__ = \"Sign In\";\n","import React, { useState, useEffect } from \"react\";\nimport { lorem, name } from \"faker\";\nimport Moment from \"react-moment\";\nimport { Link } from \"react-router-dom\";\n\nexport default function DirectoryView() {\n  let [users, setUsers] = useState([]);\n  useEffect((_) => {\n    let randomUsers = [];\n    for (let count = 0; count < 25; count++) {\n      let mockName = name.findName();\n      let username = mockName.toLowerCase().split(\" \").join(\"-\");\n      randomUsers.push([mockName, username]);\n    }\n    setUsers(randomUsers);\n  }, []);\n  return (\n    <div>\n      {users.map((user, k) => (\n        <article className=\"media\" key={k}>\n          <figure className=\"media-left\">\n            <p className=\"image is-64x64\">\n              <img src=\"https://via.placeholder.com/128x128\" />\n            </p>\n          </figure>\n          <div className=\"media-content\">\n            <div className=\"content\">\n              <p>\n                <strong>{user[0]}</strong>{\" \"}\n                <Link to={`/profiles/${user[1]}`}>\n                  <small>@{user[1]}</small>\n                </Link>{\" \"}\n                <br />\n                {lorem.words(5)}\n              </p>\n            </div>\n          </div>\n        </article>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { lorem } from \"faker\";\nimport FeedView from \"../feed/FeedView\";\n\nexport default function ProfileView({ id }) {\n  return (\n    <div className=\"tile is-ancestor\">\n      <div className=\"tile is-4 is-vertical is-parent\">\n        <div className=\"tile is-child box\">\n          <p className=\"image\">\n            <img\n              src=\"https://via.placeholder.com/256x256\"\n              style={{ borderRadius: \"10px\" }}\n            />\n          </p>\n          <hr />\n          <p className=\"title\">{id}</p>\n          <p className=\"subtitle is-7\">{lorem.words(10)}</p>\n          <div className=\"buttons is-grouped\">\n            <div className=\"control\">\n              <button className=\"button\">Follow</button>\n              <button className=\"button is-danger\">Block</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"tile is-parent\">\n        <div className=\"tile is-child box\">\n          <p className=\"title\">Wall</p>\n          <FeedView limit={5} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { ViewManager } from \"../App\";\nimport CreateView from \"./user/CreateView\";\nimport FeedView from \"./feed/FeedView\";\nimport LoginView from \"./user/LoginView\";\nimport { util } from \"./Util\";\nimport DirectoryView from \"./profile/DirectoryView\";\nimport ProfileView from \"./profile/ProfileView\";\n\nexport default function Navigation() {\n  return (\n    <Router>\n      <div>\n        <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n          <div className=\"navbar-brand\">\n            <a className=\"navbar-item\" href=\"https://bulma.io\">\n              <img\n                src=\"https://via.placeholder.com/640x160\"\n                width=\"112\"\n                height=\"28\"\n              />\n            </a>\n\n            <a\n              role=\"button\"\n              className=\"navbar-burger\"\n              aria-label=\"menu\"\n              aria-expanded=\"false\"\n              data-target=\"navbarBasicExample\"\n            >\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n              <span aria-hidden=\"true\"></span>\n            </a>\n          </div>\n\n          <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n            <div className=\"navbar-start\">\n              <Link className=\"navbar-item\" to=\"/\">\n                Home\n              </Link>\n\n              <Link className=\"navbar-item\" to=\"/profiles\">\n                Profiles\n              </Link>\n            </div>\n\n            <div className=\"navbar-end\">\n              <div className=\"navbar-item\">\n                <div className=\"buttons\">\n                  <>\n                    {util.isLoggedIn() === true && (\n                      <>\n                        <Link\n                          to={`/profiles/${util.username}`}\n                          className=\"button\"\n                        >\n                          @{util.username}\n                        </Link>\n                      </>\n                    )}\n                    {util.isLoggedIn() === false && (\n                      <>\n                        <Link\n                          className=\"button is-primary\"\n                          to=\"/create-account\"\n                        >\n                          <strong>Sign up</strong>\n                        </Link>\n                        <Link className=\"button is-light\" to=\"/sign-in\">\n                          Log in\n                        </Link>\n                      </>\n                    )}\n                  </>\n                </div>\n              </div>\n            </div>\n          </div>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/sign-in\">\n            <ViewManager view={LoginView} />\n          </Route>\n          <Route path=\"/create-account\">\n            <ViewManager view={CreateView} />\n          </Route>\n          <Route path=\"/profiles/:id\">\n            <ViewManager view={ProfileView} />\n          </Route>\n          <Route path=\"/profiles\">\n            <ViewManager view={DirectoryView} />\n          </Route>\n          <Route path=\"/\">\n            <ViewManager view={FeedView} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","import \"bulma/css/bulma.css\";\nimport Navigation from \"./components/Navigation\";\nimport { util } from \"./components/Util\";\nimport { useParams } from \"react-router\";\n\nexport function ViewManager({ view }) {\n  let params = useParams();\n  let View = view; // components need to be capitalized\n  return (\n    <section className=\"section\">\n      {View.__TITLE__ && <h1 className=\"title\">{View.__TITLE__}</h1>}\n      <div className=\"box\">\n        <View {...params} />\n      </div>\n    </section>\n  );\n}\n\nfunction App() {\n  // check for username to see if we're logged in, and then set it in Util\n  let username = window.localStorage.getItem(\"username\");\n  util.username = username;\n  return (\n    <div className=\"App\">\n      <Navigation />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}